# Inspired by https://docs.docker.com/compose/django/

# This is for development purposes ONLY. Do NOT run this in production with
# the same SECRET_KEYs.

version: '3.4'

services:
  # databases
  zrc_db:
    image: mdillon/postgis:10
    volumes:
      - zrc_postgres_data:/var/lib/postgresql/data

  drc_db:
    image: postgres:10
    volumes:
      - drc_postgres_data:/var/lib/postgresql/data

  ztc_db:
    image: postgres:10
    volumes:
      - ztc_postgres_data:/var/lib/postgresql/data

  brc_db:
    image: postgres:10
    volumes:
      - brc_postgres_data:/var/lib/postgresql/data

  nrc_db:
    image: postgres:10
    volumes:
      - nrc_postgres_data:/var/lib/postgresql/data

  ac_db:
    image: postgres:11
    volumes:
      - ac_postgres_data:/var/lib/postgresql/data

  # brokers
  nrc_rabbitmq:
    image: rabbitmq:3.7-alpine

  # web
  zrc_web:
    image: vngr/gemma-zrc:latest
    environment:
      - DJANGO_SETTINGS_MODULE=zrc.conf.docker
      - SECRET_KEY=c1zqz%y-s-$$63ca_abc8dmfjno#&pk!wy8k9f8c*4w@(whxy1n'
      - DB_HOST=zrc_db
      - IS_HTTPS=0
    volumes:
      - token_fixtures:/app/fixtures
    depends_on:
      - zrc_db

  drc_web:
    image: vngr/gemma-drc:latest
    environment:
      - DJANGO_SETTINGS_MODULE=drc.conf.docker
      - SECRET_KEY=h1kluf9r2yhcfr_i!fqb!srx=!u@!^b_gdl54=h0n15j34*+#=
      - DB_HOST=drc_db
      - IS_HTTPS=0
      - SENDFILE_BACKEND=sendfile.backends.simple
    volumes:
      - token_fixtures:/app/fixtures
      - drc_media:/app/private-media
    depends_on:
      - drc_db

  drc_nginx:
    image: nginx:1.15
    volumes:
      - ./nginx/drc.conf:/etc/nginx/conf.d/mysite.template
      - drc_media:/private-media
    environment:
      - MIN_UPLOAD_SIZE=${MIN_UPLOAD_SIZE:-4294967296}
    command: /bin/bash -c "envsubst '$$DRC_HOST,$$DRC_NGINX_PORT,$$DRC_UWSGI_PORT,$$MIN_UPLOAD_SIZE' < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    depends_on:
      - drc_web

  ztc_web:
    image: vngr/gemma-ztc:latest
    environment:
      - DJANGO_SETTINGS_MODULE=ztc.conf.docker
      - SECRET_KEY=)lwxn07vp1+ru=yf^n+v4l&ij24l3vhhitw9vk4=0ix14ibmfj
      - DB_HOST=ztc_db
      - IS_HTTPS=0
    volumes:
      - token_fixtures:/app/fixtures
    depends_on:
      - ztc_db

  brc_web:
    image: vngr/gemma-brc:latest
    environment:
      - DJANGO_SETTINGS_MODULE=brc.conf.docker
      - SECRET_KEY=u=y-#vjs0lw^%d13s8i=7r-880=-%5v!vmyzdoo=2go%ana4rc
      - DB_HOST=brc_db
      - IS_HTTPS=0
    volumes:
      - token_fixtures:/app/fixtures
    depends_on:
      - brc_db

  nrc_web:
    image: vngr/notificaties-api:latest
    environment:
      - DJANGO_SETTINGS_MODULE=notifications.conf.docker
      - SECRET_KEY=o8q03n90*67biona0=9fcm9m5niqgihxidi4c7nginfxq73qhf
      - DB_HOST=nrc_db
      - IS_HTTPS=0
      - PUBLISH_BROKER_URL=amqp://guest:guest@nrc_rabbitmq:5672/%2F
      - CELERY_BROKER_URL=amqp://guest:guest@nrc_rabbitmq:5672//
      - CELERY_RESULT_BACKEND=amqp://guest:guest@nrc_rabbitmq:5672//
    volumes:
      - token_fixtures:/app/fixtures
    depends_on:
      - nrc_db
      - nrc_rabbitmq

  nrc_celery:
    image: vngr/notificaties-api:latest
    environment:
      - DJANGO_SETTINGS_MODULE=notifications.conf.docker
      - SECRET_KEY=o8q03n90*67biona0=9fcm9m5niqgihxidi4c7nginfxq73qhf
      - DB_HOST=nrc_db
      - IS_HTTPS=0
      - PUBLISH_BROKER_URL=amqp://guest:guest@nrc_rabbitmq:5672/%2F
      - CELERY_BROKER_URL=amqp://guest:guest@nrc_rabbitmq:5672//
      - CELERY_RESULT_BACKEND=amqp://guest:guest@nrc_rabbitmq:5672//
    command: celery worker --app=notifications -l info --workdir=src
    volumes:
      - token_fixtures:/app/fixtures
    depends_on:
      - nrc_db
      - nrc_rabbitmq

  ac_web:
    image: vngr/gemma-autorisatiecomponent:latest
    environment:
      - DJANGO_SETTINGS_MODULE=ac.conf.docker
      - SECRET_KEY=%a$$ac3x=au_h_7q1--3hsu6crina5u)@a=i7l!!62h9vlo%#!c
      - DB_HOST=ac_db
      - IS_HTTPS=0
    volumes:
      - token_fixtures:/app/fixtures
    depends_on:
      - ac_db

  tokentool:
    image: maykinmedia/zds-token-issuer:0.5.0
    command: ["/bin/sh", "-c", "echo done"]
    environment:
      - SECRET_KEY=dummy
    volumes:
      - token_fixtures:/tmp/fixtures

volumes:
  zrc_postgres_data:
  drc_postgres_data:
  drc_media:
  ztc_postgres_data:
  brc_postgres_data:
  nrc_postgres_data:
  ac_postgres_data:
  token_fixtures:
